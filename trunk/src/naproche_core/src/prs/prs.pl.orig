:- module(prs,
         [empty_prs/1,
          empty_prs_plus/1,
          is_prs/1]).

/** <module> Working with PRSs

@author Nickolay Kolev
*/

% assumption marker
:- op(901, xfx, user:(=>)).

% implication marker
:- op(901, xfx, user:(==>)).

% definition marker
:- op(901, xfx, user:(:=)).

%% empty_prs(-PRS) is det
%
% Unifies its argument with a new, empty container PRS.
empty_prs(id~container..
          drefs~[]..
          mrefs~[]..
          conds~[]..
          rrefs~[]).

empty_prs_plus(accessibles~[]..
               accessible_before_prs~[]..
               history~[]..
               prs~PRS) :-
  empty_prs(PRS).

%% is_prs(+What) is det
%
% True if What looks like a GULP encoded PRS.
%
% It is defined as:
%
%==
% is_prs(What) :-
%  subsumes_chk(id~_..drefs~_..mrefs~_..conds~_..rrefs~_, What).
%==
is_prs(What) :-
  subsumes_chk(id~_..drefs~_..mrefs~_..conds~_..rrefs~_, What).
